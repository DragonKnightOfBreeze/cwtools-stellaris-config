#sprites are saved in *.gfx files (like meshes) and are by and large stored in /interface

types = {
	type[sprite] = {
		path = "game/interface"
		path_extension = .gfx
		skip_root_key = spriteTypes
		name_field = name # these are links that start with the GFX_ prefix in vanilla
		severity = warning

		## type_key_filter = spriteType
		subtype[normal] = {}
		## type_key_filter = frameAnimatedSpriteType
		subtype[framed_animated_sprite] = {}
		## type_key_filter = corneredTileSpriteType
		subtype[cornered_tile_sprite] = {}
		## type_key_filter = flagSpriteType
		subtype[flag_sprite] = {}
		## type_key_filter = textSpriteType
		subtype[text_sprite] = {}
		## type_key_filter = portraitType
		subtype[portrait_sprite] = {}
		## type_key_filter = progressbartype
		subtype[progressbar] = {}
		## type_key_filter = PieChartType
		subtype[piechart] = {}

		images = {
			subtype[!progressbar&!piechart] = {
				## primary
				texture = textureFile # filepath
				## primary
				texture = sprite_sheet_sprite_type # <sprite>
				## primary
				texture = parent # <sprite>
				## optional
				masking_texture = masking_texture # filepath
			}
			subtype[progressbar] = {
				## optional
				textureFile = textureFile # filepath
				## optional
				textureFile1 = textureFile1 # filepath
				## optional
				textureFile2 = textureFile2 # filepath
			}
		}
	}
}

sprite = {
	subtype[!progressbar&!piechart] = {
		name = scalar
		## cardinality = 0..1
		parent = <sprite>
		## cardinality = 0..1
		upper_left = { x = int y = int }
		## cardinality = 0..1
		lower_right = { x = int y = int }
		## file_extensions = { .png .dds .tga }
		## cardinality = 0..1
		textureFile = filepath
		## file_extensions = { .png .dds .tga }
		## cardinality = 0..1
		masking_texture = filepath
		## cardinality = 0..1
		sprite_sheet_sprite_type = <sprite>
		## cardinality = 0..1
		default_frame = int
		## file_extensions = { .shader }
		## cardinality = 0..1
		effectFile = filepath
		## cardinality = 0..1
		alwaysTransparent = bool
		## cardinality = 0..1
		transParencecheck = bool
		## cardinality = 0..1
		borderSize = { x = float y = float }
		## cardinality = 0..1
		hitbox_margin = { x = int y = int }
		## cardinality = 0..1
		noOfFrames = int
		## cardinality = 0..1
		type = enum[sprite_type]
		## cardinality = 0..1
		alternate_configurations = {
			<sprite_configurations>
		}
		## cardinality = 0..1
		character = bool
		## cardinality = 0..1
		close_up = bool
		## cardinality = 0..1
		mid_close_up = bool
		## cardinality = 0..1
		tilingCenter = bool
		## cardinality = 0..1
		clicksound = <sound_effect>
		## cardinality = 0..1
		loadType = scalar
		## cardinality = 0..1
		legacy_lazy_load = bool
		## cardinality = 0..inf
		animation = {
			## file_extensions = { .png .dds .tga }
			## cardinality = 0..1
			animationmaskfile = filepath
			## file_extensions = { .png .dds .tga }
			## cardinality = 0..1
			animationtextureFile = filepath
			## cardinality = 0..1
			animationrotation = float[-360..360]
			## cardinality = 0..1
			animationlooping = bool
			## cardinality = 0..1
			animationtime = float
			## cardinality = 0..1
			animationdelay = float
			## cardinality = 0..1
			animationblendmode = enum[animation_mode]
			## cardinality = 0..1
			animationtype = enum[animation_type]
			## cardinality = 0..1
			animationrotationoffset = { x = float y = float }
			## cardinality = 0..1
			animationtexturescale = { x = float y = float }
			## cardinality = 0..1
			animationframes = {
				## cardinality = 1..3
				int
			}
		}
	}
	subtype[flag_sprite] = {
		## cardinality = 0..1
		texture_size = enum[texture_size]
		## cardinality = 0..1
		bg_position = { x = float y = float }
		## cardinality = 0..1
		bg_size = { width = int height = int }
		## cardinality = 0..1
		symbol_position = { x = float y = float }
		## cardinality = 0..1
		symbol_size = { width = int height = int }
		## cardinality = 0..1
		mask_offset = { x = float y = float }
		## cardinality = 0..1
		mask_size = { width = int height = int }
	}
	subtype[framed_animated_sprite] = {
		## cardinality = 0..1
		play_on_show = bool
		## cardinality = 0..1
		animation_rate_fps = int
		## cardinality = 0..1
		looping = bool
	}
	subtype[cornered_tile_sprite] = {
		## cardinality = 0..1
		size = {
			x = int
			y = int
		}
	}

	subtype[progressbar] = {
		name = scalar

		# either textureFile, or both textureFile1 and 2 - need to be worked out.

		## file_extensions = { .png .dds .tga }
		## cardinality = 0..1
		textureFile = filepath
		## file_extensions = { .png .dds .tga }
		## cardinality = 0..1
		textureFile1 = filepath
		## file_extensions = { .png .dds .tga }
		## cardinality = 0..1
		textureFile2 = filepath
		## file_extensions = { .shader }
		effectFile = filepath

		## color_type = hsv
		color = {
			## cardinality = 3..3
			float
		}
		## color_type = hsv
		colortwo = {
			## cardinality = 3..3
			float
		}
		size = { x = float y = float }
		## cardinality = 0..1
		horizontal = bool
		## cardinality = 0..1
		flipdirection = bool
	}

	subtype[piechart] = {
		name = scalar
		size = int
	}
}

enums = {
	enum[animation_mode] = {
		overlay
		add
		multiply
	}
	enum[animation_type] = {
		scrolling
		rotating
		pulsing
		rotating_ccw
		rotating_cw
	}
	enum[sprite_type] = {
		planet
		room
		empty_room
		character
		character_large
		character_without_room
	}
	enum[texture_size] = {
		small
	}
}
